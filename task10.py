# Напишите функцию convert_base(num, from_base, to_base),
# которая переводит натуральное число num из системы
# счисления с основанием from_base в систему счисления
# с основанием to_base
# 2 ≤ to_base ≤ 36 ; 2 ≤ from_base ≤ 36
# На входе три числа num, from_base, to_base
# На выходе одно число - результат работы функции
# Подсказка (если не получается решить):
# Попробуйте разбить задачу на две подзадачи:
# перевод из десятичной системы счисления в любую
# перевод из любой системы счисления в десятичную
# Объедините эти две подзадачи, получите ответ.
def convert_base(num, from_base, to_base):
    k1 = {'0':0, '1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9,
    'A':10, 'B':11, 'C':12, 'D':13, 'E':14, 'F':15,
    'G':16, 'H':17, 'I':18, 'J':19, 'K':20, 'L':21, 'M':22, 'N':23, 'O':24, 'P':25,
    'Q':26, 'R':27, 'S':28, 'T':29, 'U':30, 'V':31, 'W':32, 'X':33, 'Y':34, 'Z':35}
    k2 = {0:'0', 1:'1', 2:'2', 3:'3', 4:'4', 5:'5', 6:'6', 7:'7', 8:'8', 9:'9',
    10:'A', 11:'B', 12:'C', 13:'D', 14:'E', 15:'F',
    16:'G', 17:'H', 18:'I', 19:'J', 20:'K', 21:'L', 22:'M', 23:'N', 24:'O', 25:'P',
    26:'Q', 27:'R', 28:'S', 29:'T', 30:'U', 31:'V', 32:'W', 33:'X', 34:'Y', 35:'Z'}
    U=num
    x=from_base
    N=to_base
    i=35
    k=0
    K=len(U)
    T=0
    t=0
    while k<K:
        T=(k1.get(U[k]))
        t+=T*x**(K-k-1)
        k+=1
    k=0
    print(t)
    n=0
    a=[]
    while(t//N>0):
        a.insert(0,(t%N))
        t=t//N
    a.insert(0,(t%N))
    K=len(a)
    while k<K:
        T=(k2.get(a[k]))
        k+=1
        print(T, end = "")
num = int(input())
from_base = int(input())
to_base = int(input())
print(convert_base(num, from_base, to_base))